from __gin__ import dynamic_registration

from platune.datasets import dataset
from platune.datasets import midi_descriptors
from platune.networks import transformerv2
from platune import model


# HPARAMS


# HPARAMS

BATCH = 32
N_WORKERS = 16

LATENT_DIM = 64

SEQ_LENGTH = 128

DISCRETE_KEYS = []
USE_INSTRUMENT=False
CLASSES_ATTR_DISCRETE = []
AE_RATIO = 2048

CONTINUOUS_KEYS = ["average_duration", "note_density", "central_pitch","pitch_range_var"]

SIGMA_INIT = 0.5
SIGMA_DECAY = 0.998
R = 0.25
SIGMA_TARGET_CONTINUOUS = 0.05
LEARNING_RATE = 1e-4
USE_GRAD_CLIP = True
NB_STEPS = 20

WINDOW_SIZE = 2.
HOP_SIZE = 0.05
MIN_MAX_FILE = "/data/nils/datasets/maestro/m2l_midiv2/stats_win2.json"


# DATA_LOADER  
dataset.load_data:
    discrete_keys = %DISCRETE_KEYS 
    continuous_keys = %CONTINUOUS_KEYS
    batch_size = %BATCH
    n_workers = %N_WORKERS
    ae_ratio = %AE_RATIO
    crop = %SEQ_LENGTH
    use_instrument=False

midi_descriptors.compute_midi_descriptors:
    window_size = %WINDOW_SIZE
    hop_size = %HOP_SIZE
    playing_notes = True

# NETWORKS
transformerv2.Denoiser:
    n_channels = %LATENT_DIM
    seq_len = %SEQ_LENGTH
    embed_dim = 768
    noise_embed_dims = 128
    time_cond_dim = 4
    time_cond_type = "concat"
    n_layers = 6
    mlp_multiplier = 3
    dropout = 0.1
    causal = False
    pos_emb_type = "rotary"
    max_cache_size = 0
    min_chunk_size = 1


# MODEL
model.SDEdit:
    flow = @transformerv2.Denoiser
    latent_dim = %LATENT_DIM
    discrete_keys = %DISCRETE_KEYS
    continuous_keys = %CONTINUOUS_KEYS
    classes_attr_discrete = %CLASSES_ATTR_DISCRETE
    sigma_init = %SIGMA_INIT
    r = %R
    sigma_decay = %SIGMA_DECAY
    sigma_target_continuous = %SIGMA_TARGET_CONTINUOUS
    lr = %LEARNING_RATE
    use_grad_clip = %USE_GRAD_CLIP
    n_ex_val = 4
    nb_steps = %NB_STEPS
